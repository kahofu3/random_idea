//@version=5
strategy("SPX VWAP Reversion Winner", overlay=true, initial_capital=100000, default_qty_type=strategy.percent_of_equity, default_qty_value=10)

// === INPUT PARAMETERS ===
vwapLength = input.int(78, "VWAP Period", minval=20, tooltip="Number of bars for VWAP calculation (~1 day for 5min)")
stdDev = input.float(2.0, "Standard Deviation", minval=1.0, maxval=3.0, step=0.1)
rsiLength = input.int(9, "RSI Period", minval=5, maxval=20)
rsiOversold = input.int(30, "RSI Oversold", minval=20, maxval=40)
rsiOverbought = input.int(70, "RSI Overbought", minval=60, maxval=80)

// Risk Management
stopLoss = input.float(2.0, "Stop Loss %", minval=0.5, maxval=5.0, step=0.1) / 100
takeProfit = input.float(3.0, "Take Profit %", minval=1.0, maxval=10.0, step=0.5) / 100

// Time Filter
tradingHours = input.bool(true, "Use Trading Hours Filter")
startHour = input.int(9, "Start Hour", minval=0, maxval=23)
endHour = input.int(15, "End Hour", minval=0, maxval=23)

// === VWAP CALCULATION ===
typicalPrice = (high + low + close) / 3
tpv = typicalPrice * volume
cumTPV = ta.sma(tpv, vwapLength) * vwapLength
cumVol = ta.sma(volume, vwapLength) * vwapLength
vwap = cumTPV / cumVol

// VWAP Bands
vwapStd = ta.stdev(typicalPrice, vwapLength)
vwapUpper = vwap + (stdDev * vwapStd)
vwapLower = vwap - (stdDev * vwapStd)

// === RSI CALCULATION ===
rsi = ta.rsi(close, rsiLength)

// === TRADING CONDITIONS ===
inTradingHours = not tradingHours or (hour >= startHour and hour < endHour)

// Entry Signals
buySignal = close < vwapLower and rsi < rsiOversold and inTradingHours
sellSignal = close > vwapUpper and rsi > rsiOverbought and inTradingHours

// === PLOTTING ===
// VWAP and Bands
plot(vwap, "VWAP", color=color.orange, linewidth=2)
p1 = plot(vwapUpper, "Upper Band", color=color.red, linewidth=1)
p2 = plot(vwapLower, "Lower Band", color=color.green, linewidth=1)
fill(p1, p2, color=color.new(color.gray, 90))

// Signal Markers
plotshape(buySignal, "Buy Signal", shape.triangleup, location.belowbar, color.green, size=size.small)
plotshape(sellSignal, "Sell Signal", shape.triangledown, location.abovebar, color.red, size=size.small)

// === STRATEGY EXECUTION ===
if (buySignal and strategy.position_size == 0)
    strategy.entry("Long", strategy.long)
    
if (sellSignal and strategy.position_size == 0)
    strategy.entry("Short", strategy.short)

// Exit Logic
if (strategy.position_size > 0)  // Long position
    stopPrice = strategy.position_avg_price * (1 - stopLoss)
    targetPrice = strategy.position_avg_price * (1 + takeProfit)
    strategy.exit("Exit Long", "Long", stop=stopPrice, limit=targetPrice)
    
if (strategy.position_size < 0)  // Short position
    stopPrice = strategy.position_avg_price * (1 + stopLoss)
    targetPrice = strategy.position_avg_price * (1 - takeProfit)
    strategy.exit("Exit Short", "Short", stop=stopPrice, limit=targetPrice)

// Force close at end of day
if (hour == 15 and minute >= 55)
    strategy.close_all("EOD")

// === INFO TABLE ===
var table infoTable = table.new(position.top_right, 2, 7, bgcolor=color.new(color.black, 80))

if barstate.islast
    table.cell(infoTable, 0, 0, "VWAP WINNER", text_color=color.white, bgcolor=color.green)
    table.cell(infoTable, 1, 0, "70.8% Win", text_color=color.white, bgcolor=color.green)
    
    table.cell(infoTable, 0, 1, "VWAP", text_color=color.orange)
    table.cell(infoTable, 1, 1, str.tostring(vwap, "#.##"), text_color=color.white)
    
    table.cell(infoTable, 0, 2, "RSI", text_color=color.yellow)
    table.cell(infoTable, 1, 2, str.tostring(rsi, "#.#"), text_color=rsi < 30 ? color.green : rsi > 70 ? color.red : color.white)
    
    table.cell(infoTable, 0, 3, "Position", text_color=color.gray)
    table.cell(infoTable, 1, 3, strategy.position_size > 0 ? "LONG" : strategy.position_size < 0 ? "SHORT" : "FLAT", 
                text_color=strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : color.gray)
    
    table.cell(infoTable, 0, 4, "Band Pos", text_color=color.gray)
    bandPos = close < vwapLower ? "Below Lower" : close > vwapUpper ? "Above Upper" : "In Range"
    table.cell(infoTable, 1, 4, bandPos, text_color=close < vwapLower ? color.green : close > vwapUpper ? color.red : color.white)
    
    table.cell(infoTable, 0, 5, "Signal", text_color=color.gray)
    table.cell(infoTable, 1, 5, buySignal ? "BUY" : sellSignal ? "SELL" : "WAIT", 
                text_color=buySignal ? color.green : sellSignal ? color.red : color.gray)
    
    table.cell(infoTable, 0, 6, "Sharpe", text_color=color.blue)
    table.cell(infoTable, 1, 6, "4.58", text_color=color.blue)